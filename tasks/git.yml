---

  - name: install git
    become: yes
    apt: 
      name: 
        - git
      state: latest
    when: ! dev_workstation.git_tools

  - name: install git and tools
    become: yes
    apt: 
      name: 
        - git
        - meld
      state: latest
    when: dev_workstation.git_tools

  - name: git configuration
    become: yes
    become_user: "{{ item.key }}"
    template: 
      src: "git/gitconfig.j2"
      dest: "/home/{{ item.key }}/.gitconfig"
      backup: yes
    loop: "{{ lookup('dict', dev_workstation.workspaces, wantlist=True) }}"
    
  - name: git-aware-prompt - ensure bash configuration folder
    become: yes
    become_user: "{{ item.key }}"
    file:
      path: "/home/{{ item.key }}/.bash"
      state: directory
    when: dev_workstation.git_tools
    loop: "{{ lookup('dict', dev_workstation.workspaces, wantlist=True) }}"

  - name: git-aware-prompt - retrieve repo
    become: yes
    become_user: "{{ item.key }}"
    git:
      repo: "https://github.com/andreasbehnke/git-aware-prompt.git"
      dest: "/home/{{ item.key }}/.bash/git-aware-prompt"
      update: yes
    when: dev_workstation.git_tools
    loop: "{{ lookup('dict', dev_workstation.workspaces, wantlist=True) }}"

  - name: configure git aware prompt
    become: yes
    become_user: "{{ item.key }}"
    blockinfile:
      dest: "/home/{{ item.key }}/.bashrc"
      content: |
        export PROMPT_DIRTRIM=2
        export GITAWAREPROMPT=~/.bash/git-aware-prompt
        source "${GITAWAREPROMPT}/main.sh"
        export PS1="\[\033[01;34m\]\w\[\033[00m\] \[$txtcyn\]\$git_branch\[$txtred\]\$git_dirty\[$txtrst\]\$ "

    when: dev_workstation.git_tools
    loop: "{{ lookup('dict', dev_workstation.workspaces, wantlist=True) }}"

  - name: ensure source directory
    become: yes
    file:
      path: "{{ item.value.source_base }}"
      owner: "{{ item.key }}"
      group: "{{ item.key }}"
      state: "directory"
    when: item.value.source_base is defined
    loop: "{{ lookup('dict', dev_workstation.workspaces, wantlist=True) }}"

  - name: clone repositories
    include_tasks: "git_clone.yml"
    vars:
      - repositories: "{{workspace.value.git.repositories}}"
      - path: "{{ workspace.value.source_base }}"
      - user: "{{ workspace.key }}"
    when: workspace.value.git.repositories is defined
    loop: "{{ lookup('dict', dev_workstation.workspaces, wantlist=True) }}"
    loop_control:
      loop_var: "workspace"